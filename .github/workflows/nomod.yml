name: C/C++ CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:

    runs-on: self-hosted #ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
         submodules: recursive
    - name: apt-get
      run: |
         set -x
         sudo apt-get update
         sudo apt-get install git build-essential fakeroot libncurses5-dev libssl-dev ccache dfu-util u-boot-tools device-tree-compiler libssl-dev mtools bc python cpio zip unzip rsync file wget gcc-arm-linux-gnueabihf libiio-dev libc6-armel-cross libc6-dev-armel-cross binutils-arm-linux-gnueabi libncurses5-dev build-essential bison flex libssl-dev bc

    - name: configure buildroot
      run: |
         set -x
         cd plutosdr-fw
         export CROSS_COMPILE=arm-linux-gnueabihf-
         
         wget -N --quiet "https://developer.arm.com/-/media/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf.tar.xz"
         
         tar -xf gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf.tar.xz
         
         ls -al
                  
         export PATH=`pwd`/gcc-arm-8.2-2018.08-x86_64-arm-linux-gnueabihf/bin:$PATH
                  
         which ${CROSS_COMPILE}gcc
         
         make clean
         
         make -j8 pluto.frm
         
         cd buildroot
         make batctl 
         make bridge-utils 
         rm -fr output/build/fftw-3.3.7/
         make fftw 
         make iperf3 
         make iproute2 
         make liquid-dsp 
         make tunctl
         rm -fr output/build/util-linux-2.31.1/
         make util-linux
         cd ..
         
         
         cd charon
         mkdir third_party
         cd third_party
         git clone https://github.com/tvelliott/libtuntap.git
         git clone https://github.com/tvelliott/libfec.git
         cd ..
         make clean
         make
         cp third_party/libfec/*.so ../buildroot/output/target/usr/lib
         cp charon ../buildroot/output/target/usr/bin
         cd ..
         make


